version: "3.8"
services:
  backend:
    image: run-goals/backend:latest
    container_name: run-goals-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=run_goals
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: run-goals/frontend:latest
    container_name: run-goals-frontend
    build:
      context: ./frontend/strava-goal
      dockerfile: Dockerfile
    expose:
      - "80"
    depends_on:
      backend:
        condition: service_started

  frontend-dev:
    container_name: run-goals-frontend-dev
    build:
      context: ./frontend/strava-goal
      dockerfile: Dockerfile.dev
    # Volume mount for live reload
    volumes:
      - ./frontend/strava-goal:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    command: npm run start

  db:
    image: run-goals/db:latest
    container_name: run-goals-db
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: develop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: run_goals
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: run-goals-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
